name: CI/CD to ECS

on:
  push:
    branches: [dev]

env:
  IMAGE_TAG: ${{ github.sha }}

jobs:
  deploy:
    name: Scan, Test, Build, Push & Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Run basic Python test
      run: |
        python -c "import uptime_monitor; print('âœ… Script loads successfully')"

    - name: Run Trivy scan
      uses: aquasecurity/trivy-action@0.28.0
      with:
        scan-type: fs
        scan-ref: '.'
        severity: 'CRITICAL,HIGH'
        exit-code: '1'
        format: 'table'

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build Docker image
      run: docker build -t ${{ secrets.IMAGE_NAME }}:$IMAGE_TAG .

    - name: Push Docker image to DockerHub
      run: docker push ${{ secrets.IMAGE_NAME }}:$IMAGE_TAG

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Create new ECS task definition revision
      id: render-task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ecs-task-def.json
        container-name: ${{ secrets.CONTAINER_NAME }}
        image: ${{ secrets.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        environment-variables: |
         SLACK_WEBHOOK_URL=${{ secrets.SLACK_WEBHOOK_URL }}

    - name: Deploy to ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        cluster: ${{ secrets.ECS_CLUSTER }}
        service: ${{ secrets.ECS_SERVICE }}
        task-definition: ${{ steps.render-task-def.outputs.task-definition }}
        wait-for-service-stability: true
